version: '3.9'

services:
  blue_bot:
    container_name: blue_bot_container
    image: blue_bot_image
    build:
      context: bot
      dockerfile: Dockerfile
    env_file:
      - ./.env.prod
    depends_on:
      - blue_django

  blue_django:
    container_name: blue_django_container
    image: django_image
    build:
      context: django_blue/
      dockerfile: Dockerfile.prod
    command: gunicorn admin_bot.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - 8000
    env_file:
      - .env.prod
    depends_on:
      - blue_bot_db

  blue_bot_db:
    container_name: ${DB_HOST}
    image: postgres:alpine3.17
    volumes:
      - ./create_table.sql:/docker-entrypoint-initdb.d/create_table.sql
      - postgres_data:/var/lib/postgresql/data
    expose:
      - '5432'
    env_file:
    - .env.prod.db



  pgadmin:
    container_name: blue_pgadmin_container
    image: dpage/pgadmin4
    profiles:
      - "dev"
    restart: on-failure
    env_file:
      - ./.env.prod
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    profiles:
      - "ssl"
    volumes:
      - etc-letsencrypt:/etc/letsencrypt
      - www-html:/var/www/html
    depends_on:
     - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email 19taurus79@gmail.com --agree-tos --no-eff-email -d diet-online.agency


  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - etc-letsencrypt:/etc/letsencrypt
      - www-html:/var/www/html
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - blue_django
    restart: always

  redis:
    container_name: blue_redis
    image: redis:alpine3.17
    restart: always
    env_file:
      - .env
    expose:
      - ${REDIS_PORT}
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  pgadmin_data:
  static_volume:
  redis_data:
  www-html:
  etc-letsencrypt:




