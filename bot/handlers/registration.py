from aiogram import F
from aiogram import Router
from aiogram.filters import Text
from aiogram.types import CallbackQuery, Message, ReplyKeyboardRemove
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from utils.database_functions.get_from_db import add_guest_to_db, update_guest_in_db
from keyboards.registration_kb import get_accept_kb, get_contact_kb, get_change_kb
from encodings import utf_8

router = Router()


class StepsForm(StatesGroup):
    """–ö–ª–∞—Å, —â–æ –æ–ø–∏—Å—É—î —Å—Ç–∞–Ω–∏ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
    INITIAL_DATA = State()
    CHANGE_DATA = State()
    CONFIRM_DATA = State()
    F_NAME_CHANGED = State()
    L_NAME_CHANGED = State()
    EMAIL_CHANGED = State()
    PHONE_CHANGED = State()


@router.callback_query(Text(text="registration"))
async def cmd_start(callback: CallbackQuery, state: FSMContext):
    """–•–µ–Ω–¥–ª–µ—Ä, —â–æ –ª–æ–≤–∏—Ç—å –∫–æ–ª–±–µ–∫ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å' –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    –ü–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∫–≤–µ—Å—Ç-–∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏:
    1. –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç
    2. —Å–∫–∞—Å—É–≤–∞—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é"""
    # –í–∏–¥–∞–ª—è—î–º–æ –∫–Ω–æ–ø–∫—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –º—ñ–≥ –Ω–∞—Ç–∏—Å–∫–∞—Ç–∏ —ó—ó –±–µ–∑–ª—ñ—á —Ä–∞–∑—ñ–≤
    await callback.message.delete()
    await callback.message.answer(
        f"–ß—É–¥–æ–≤–µ —Ä—ñ—à–µ–Ω–Ω—è, {callback.from_user.first_name}!\n"
        "–¢–µ–ø–µ—Ä –Ω–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ —Å–≤—ñ–π –∫–æ–Ω—Ç–∞–∫—Ç –∞–±–æ –º–æ–∂–µ—à –≤—Å–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏.\n",
        reply_markup=get_contact_kb())
    await state.set_state(StepsForm.INITIAL_DATA)


@router.message(StepsForm.INITIAL_DATA, F.contact)
@router.message(StepsForm.F_NAME_CHANGED)
@router.message(StepsForm.L_NAME_CHANGED)
@router.message(StepsForm.PHONE_CHANGED)
@router.message(StepsForm.EMAIL_CHANGED)
async def confirm_data(message: Message, state: FSMContext):
    """–•–µ–Ω–¥–ª–µ—Ä, —â–æ –æ–±—Ä–æ–±–ª—è—î –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ, –æ—Ç—Ä–∏–º–∞–Ω—ñ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —Ç–∞ –≤–∏–≤–æ–¥–∏—Ç—å –Ω–∞ –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—è.
    –ü—Ä–∏ –ø–µ—Ä—à–æ–º—É –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –∫–æ–Ω—Ç–∞–∫—Ç—É –æ–±—Ä–æ–±–ª—è—î –¥–∞–Ω—ñ —Ç–∞ –∑–∞–Ω–æ—Å–∏—Ç—å –≤ –¥–∞–Ω—ñ —Å—Ç–∞–Ω—É.
    –ü—Ä–∏ –ø–æ–¥–∞–ª—å—à—ñ–π –∑–º—ñ–Ω—ñ –¥–∞–Ω–∏—Ö –∑–º—ñ–Ω—é—î –¥–∞–Ω—ñ —Å—Ç–∞–Ω—É.
    –í–∏–≤–æ–¥–∏—Ç—å –∫–æ–ª–±–µ–∫-–∫–Ω–æ–ø–∫–∏ '–∑–º—ñ–Ω–∏—Ç–∏' —Ç–∞ '–∑–∞–ª–∏—à–∏—Ç–∏'."""
    user_state = await state.get_state()
    if user_state == StepsForm.INITIAL_DATA:
        await message.answer("–ö–æ–Ω—Ç–∞–∫—Ç –æ—Ç—Ä–∏–º–∞–Ω–æ!", reply_markup=ReplyKeyboardRemove())
        user_data = {
            "user_id": message.contact.user_id,
            "first_name": message.contact.first_name,
            "last_name": message.contact.last_name,
            "email": "N/A",
            "phone": message.contact.phone_number,
        }
        await state.set_data(user_data)
        await add_guest_to_db(message.contact)

    elif user_state == StepsForm.F_NAME_CHANGED:
        user_data = await state.update_data(first_name=message.text)
        await message.answer("–Ü–º'—è –∑–º—ñ–Ω–µ–Ω–æ!")

    elif user_state == StepsForm.L_NAME_CHANGED:
        user_data = await state.update_data(last_name=message.text)
        await message.answer("–ü—Ä—ñ–∑–≤–∏—â–µ –∑–º—ñ–Ω–µ–Ω–æ!")

    elif user_state == StepsForm.EMAIL_CHANGED:
        user_data = await state.update_data(email=message.text)
        await message.answer("Email –∑–º—ñ–Ω–µ–Ω–æ!")

    elif user_state == StepsForm.PHONE_CHANGED:
        user_data = await state.update_data(phone=message.text)
        await message.answer("–¢–µ–ª–µ—Ñ–æ–Ω –∑–º—ñ–Ω–µ–Ω–æ!")

    # –∑–º—ñ–Ω—é—î–º–æ —Å—Ç–∞–Ω –Ω–∞ '–ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö'
    await state.set_state(StepsForm.CONFIRM_DATA)
    # —Ñ–æ—Ä–º—É—î–º–æ –≤–∏—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤–∏–≤–æ–¥—É
    out_data = "\n".join([str(key) + ": " + str(value) for key, value in user_data.items()])
    await message.answer("<b>–í–∞—à—ñ –æ–±–ª—ñ–∫–æ–≤—ñ –¥–∞–Ω—ñ:</b>\n" + out_data +
                         "\n\n<b><u>–ó–∞–ª–∏—à–∏—Ç–∏ —Ü—ñ –¥–∞–Ω—ñ —á–∏ –±–∞–∂–∞—î—Ç–µ —â–æ—Å—å –∑–º—ñ–Ω–∏—Ç–∏?</u></b>\n",
                         reply_markup=get_accept_kb())


@router.callback_query(StepsForm.CONFIRM_DATA, Text(text="confirm"))
async def get_name(callback: CallbackQuery, state: FSMContext):
    """–•–µ–Ω–¥–ª–µ—Ä, —â–æ –ª–æ–≤–∏—Ç—å –∫–æ–ª–±–µ–∫ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ –ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    –û—Å—Ç–∞—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–Ω–æ—Å—Ç—è—Ç—å—Å—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö."""
    await callback.answer()
    user_data = await state.get_data()
    # –∑–∞–Ω–æ—Å–∏–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –æ—Å—Ç–∞—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
    await update_guest_in_db(callback.from_user.id, user_data)
    await callback.message.edit_text(f"–¢–µ–±–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ! –í—ñ—Ç–∞—é üòâ")
    await state.clear()


@router.callback_query(StepsForm.CONFIRM_DATA, Text(text="change"))
async def get_name(callback: CallbackQuery, state: FSMContext):
    """–•–µ–Ω–¥–ª–µ—Ä, —â–æ –ª–æ–≤–∏—Ç—å –∫–æ–ª–±–µ–∫ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ –ó–º—ñ–Ω–∏—Ç–∏ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    –í–∏–≤–æ–¥–∏—Ç—å –∫–æ–ª–±–µ–∫ –∫–Ω–æ–ø–∫–∏ –∑ –≤–∞—Ä—ñ–∞–Ω—Ç–∞–º–∏ –∑–º—ñ–Ω–∏ —ñ–º–µ–Ω—ñ, –ø—Ä—ñ–∑–≤–∏—â–∞, –ø–æ—à—Ç–∏ —Ç–∞ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É."""
    await callback.answer()
    user_data = await state.get_data()
    # —Ñ–æ—Ä–º—É—î–º–æ –≤–∏—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤–∏–≤–æ–¥—É
    out_data = "\n".join([str(key) + ": " + str(value) for key, value in user_data.items()])
    await callback.message.edit_text("<b>–í–∞—à—ñ –æ–±–ª—ñ–∫–æ–≤—ñ –¥–∞–Ω—ñ:</b>\n" + out_data + "\n\n–©–æ —Å–∞–º–µ –±–∞–∂–∞—î—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏?",
                                     reply_markup=get_change_kb())
    await state.set_state(StepsForm.CHANGE_DATA)


@router.callback_query(StepsForm.CHANGE_DATA, Text(startswith="change_"))
async def get_name(callback: CallbackQuery, state: FSMContext):
    """–•–µ–Ω–¥–ª–µ—Ä, —â–æ –ª–æ–≤–∏—Ç—å –∫–æ–ª–±–µ–∫ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ –∑–º—ñ–Ω–∏ –≤–∏–∑–Ω–∞—á–µ–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    –í–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª—è–Ω–Ω—è –∑ –ø—Ä–æ—Ö–∞–Ω–Ω—è–º –≤–∫–∞–∑–∞—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–∞ –∑–º—ñ–Ω—é—î —Å—Ç–∞–Ω –∑–≥—ñ–¥–Ω–æ –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º, —â–æ –∑–º—ñ–Ω–µ–Ω–æ."""
    await callback.answer()
    # –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Ö—ñ–¥–Ω–∏–π –∫–æ–ª–±–µ–∫ –∑–≥—ñ–¥–Ω–æ –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, —è–∫—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–º—ñ–Ω–∏—Ç–∏
    if callback.data == "change_first_name":
        await callback.message.edit_text("–í–≤–µ–¥–∏ —ñ–º'—è:")
        await state.set_state(StepsForm.F_NAME_CHANGED)
    elif callback.data == "change_last_name":
        await callback.message.edit_text("–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ:")
        await state.set_state(StepsForm.L_NAME_CHANGED)
    elif callback.data == "change_email":
        await callback.message.edit_text("–í–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π email:")
        await state.set_state(StepsForm.EMAIL_CHANGED)
    elif callback.data == "change_phone":
        await callback.message.edit_text("–í–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
        await state.set_state(StepsForm.PHONE_CHANGED)
